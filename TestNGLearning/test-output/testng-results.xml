<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="3" ignored="0" total="8" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="263" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="263" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
      <class name="regression.TestCase2">
        <test-method status="FAIL" signature="validateTitles()[pri:0, instance:regression.TestCase2@20e2cbe0]" name="validateTitles" duration-ms="34" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Gmail.com expected:<Yahoo.com> but was:<Title not matching>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Gmail.com expected:<Yahoo.com> but was:<Title not matching>
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:101)
at regression.TestCase2.validateTitles(TestCase2.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTitles -->
      </class> <!-- regression.TestCase2 -->
      <class name="regression.TestCase1">
        <test-method status="PASS" signature="creatingDBConnection()[pri:0, instance:regression.TestCase1@2a2d45ba]" name="creatingDBConnection" is-config="true" duration-ms="28" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatingDBConnection -->
        <test-method status="PASS" signature="creatingDBConnection()[pri:0, instance:testCases.TestCase1@2a5ca609]" name="creatingDBConnection" is-config="true" duration-ms="1" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatingDBConnection -->
        <test-method status="PASS" signature="lunchBrowser()[pri:0, instance:regression.TestCase1@2a2d45ba]" name="lunchBrowser" is-config="true" duration-ms="1" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchBrowser -->
        <test-method status="PASS" signature="doUserReg()[pri:1, instance:regression.TestCase1@2a2d45ba]" name="doUserReg" duration-ms="5" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doUserReg -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:regression.TestCase1@2a2d45ba]" name="closeBrowser" is-config="true" duration-ms="1" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="lunchBrowser()[pri:0, instance:regression.TestCase1@2a2d45ba]" name="lunchBrowser" is-config="true" duration-ms="0" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchBrowser -->
        <test-method status="PASS" signature="doLogin()[pri:2, instance:regression.TestCase1@2a2d45ba]" name="doLogin" duration-ms="14" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:regression.TestCase1@2a2d45ba]" name="closeBrowser" is-config="true" duration-ms="1" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="closingDBConnection()[pri:0, instance:regression.TestCase1@2a2d45ba]" name="closingDBConnection" is-config="true" duration-ms="1" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closingDBConnection -->
        <test-method status="PASS" signature="closingDBConnection()[pri:0, instance:testCases.TestCase1@2a5ca609]" name="closingDBConnection" is-config="true" duration-ms="1" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closingDBConnection -->
      </class> <!-- regression.TestCase1 -->
      <class name="testCases.TestCase1">
        <test-method status="PASS" signature="lunchBrowser()[pri:0, instance:testCases.TestCase1@2a5ca609]" name="lunchBrowser" is-config="true" duration-ms="2" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchBrowser -->
        <test-method status="PASS" signature="doUserReg()[pri:1, instance:testCases.TestCase1@2a5ca609]" name="doUserReg" duration-ms="3" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doUserReg -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:testCases.TestCase1@2a5ca609]" name="closeBrowser" is-config="true" duration-ms="1" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="lunchBrowser()[pri:0, instance:testCases.TestCase1@2a5ca609]" name="lunchBrowser" is-config="true" duration-ms="1" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchBrowser -->
        <test-method status="PASS" signature="doLogin()[pri:2, instance:testCases.TestCase1@2a5ca609]" name="doLogin" duration-ms="4" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:testCases.TestCase1@2a5ca609]" name="closeBrowser" is-config="true" duration-ms="1" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testCases.TestCase1 -->
      <class name="testCases.TestCase2">
        <test-method status="FAIL" signature="validateTitles()[pri:0, instance:testCases.TestCase2@68be2bc2]" name="validateTitles" duration-ms="11" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Title not matching expected [Yahoo.com] but found [Gmail.com]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Title not matching expected [Yahoo.com] but found [Gmail.com]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at testCases.TestCase2.validateTitles(TestCase2.java:15)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTitles -->
      </class> <!-- testCases.TestCase2 -->
      <class name="testCases.TestCase3">
        <test-method status="FAIL" signature="doUserRegistration()[pri:1, instance:testCases.TestCase3@28feb3fa]" name="doUserRegistration" duration-ms="4" started-at="2020-05-11T17:27:11Z" finished-at="2020-05-11T17:27:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[User is not registered]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: User is not registered
at org.testng.Assert.fail(Assert.java:96)
at testCases.TestCase3.doUserRegistration(TestCase3.java:18)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doUserRegistration -->
        <test-method status="SKIP" signature="doLogin()[pri:2, instance:testCases.TestCase3@28feb3fa]" name="doLogin" duration-ms="0" started-at="2020-05-11T17:27:11Z" depends-on-methods="testCases.TestCase3.doUserRegistration" finished-at="2020-05-11T17:27:11Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCase3.doLogin()[pri:2, instance:testCases.TestCase3@28feb3fa] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCase3.doLogin()[pri:2, instance:testCases.TestCase3@28feb3fa] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:888)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
      </class> <!-- testCases.TestCase3 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
